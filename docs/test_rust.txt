
test_rust.wasm:	file format wasm 0x1

Section Details:

Type[23]:
 - type[0] (i32) -> i32
 - type[1] () -> i32
 - type[2] (i32, i32, i32) -> i32
 - type[3] (i32) -> nil
 - type[4] (i32, i32) -> i32
 - type[5] (i32, i32) -> nil
 - type[6] () -> nil
 - type[7] (i32, i32, i32, i32) -> i32
 - type[8] (i32, f64, i32, i32, i32, i32) -> i32
 - type[9] (i32, i64, i32) -> i64
 - type[10] (i32, i32, i32) -> nil
 - type[11] (i32, i64, i64, i32) -> nil
 - type[12] (i32, i32, i32, i32, i32) -> i32
 - type[13] (i64, i32) -> i32
 - type[14] (i32, i32, i32, i32) -> nil
 - type[15] (i32, i32, i32, i32, i32) -> nil
 - type[16] (i32, i32, i32, i32, i32, i32, i32) -> i32
 - type[17] (i32, i32, f64, i32, i32, i32, i32) -> i32
 - type[18] (i64, i32, i32) -> i32
 - type[19] (i32, i32, i64, i32) -> i64
 - type[20] (f64) -> i64
 - type[21] (i64, i64) -> f64
 - type[22] (f64, i32) -> f64
Import[7]:
 - func[0] sig=7 <__wasi_fd_write> <- wasi_snapshot_preview1.fd_write
 - func[1] sig=2 <emscripten_memcpy_big> <- env.emscripten_memcpy_big
 - func[2] sig=0 <emscripten_resize_heap> <- env.emscripten_resize_heap
 - func[3] sig=6 <__handle_stack_overflow> <- env.__handle_stack_overflow
 - func[4] sig=3 <setTempRet0> <- env.setTempRet0
 - memory[0] pages: initial=256 max=256 <- env.memory
 - table[0] type=funcref initial=6 <- env.table
Function[83]:
 - func[5] sig=1 <emscripten_get_sbrk_ptr>
 - func[6] sig=6 <__wasm_call_ctors>
 - func[7] sig=4 <main>
 - func[8] sig=1 <test_c>
 - func[9] sig=1 <test_c_set_buffer>
 - func[10] sig=1 <test_c_get_buffer>
 - func[11] sig=1 <test_c_buffer_address>
 - func[12] sig=4 <core::slice::_$LT$impl$u20$$u5b$T$u5d$$GT$::as_ptr::h12bdcb698fe43582>
 - func[13] sig=1 <test_rust>
 - func[14] sig=1 <test_rust2>
 - func[15] sig=1 <test_rust3>
 - func[16] sig=1 <test_rust_set_buffer>
 - func[17] sig=1 <test_rust_get_buffer>
 - func[18] sig=1 <__errno_location>
 - func[19] sig=0 <__wasi_syscall_ret>
 - func[20] sig=2 <__stdio_write>
 - func[21] sig=0 <__emscripten_stdout_close>
 - func[22] sig=9 <__emscripten_stdout_seek>
 - func[23] sig=2 <memset>
 - func[24] sig=0 <isdigit>
 - func[25] sig=2 <memchr>
 - func[26] sig=1 <pthread_self>
 - func[27] sig=2 <wcrtomb>
 - func[28] sig=1 <__pthread_self>
 - func[29] sig=4 <wctomb>
 - func[30] sig=22 <frexp>
 - func[31] sig=11 <__ashlti3>
 - func[32] sig=11 <__lshrti3>
 - func[33] sig=21 <__trunctfdf2>
 - func[34] sig=3 <__lock>
 - func[35] sig=3 <__unlock>
 - func[36] sig=1 <__ofl_lock>
 - func[37] sig=6 <__ofl_unlock>
 - func[38] sig=0 <__towrite>
 - func[39] sig=2 <memcpy>
 - func[40] sig=2 <__fwritex>
 - func[41] sig=7 <fwrite>
 - func[42] sig=12 <__vfprintf_internal>
 - func[43] sig=16 <printf_core>
 - func[44] sig=10 <out>
 - func[45] sig=0 <getint>
 - func[46] sig=14 <pop_arg>
 - func[47] sig=18 <fmt_x>
 - func[48] sig=13 <fmt_o>
 - func[49] sig=13 <fmt_u>
 - func[50] sig=15 <pad>
 - func[51] sig=2 <vfprintf>
 - func[52] sig=8 <fmt_fp>
 - func[53] sig=5 <pop_arg_long_double>
 - func[54] sig=20 <__DOUBLE_BITS>
 - func[55] sig=4 <printf>
 - func[56] sig=4 <fputs>
 - func[57] sig=4 <__overflow>
 - func[58] sig=0 <puts>
 - func[59] sig=0 <__lockfile>
 - func[60] sig=3 <__unlockfile>
 - func[61] sig=0 <strlen>
 - func[62] sig=0 <sbrk>
 - func[63] sig=0 <dlmalloc>
 - func[64] sig=3 <dlfree>
 - func[65] sig=1 <stackSave>
 - func[66] sig=3 <stackRestore>
 - func[67] sig=0 <stackAlloc>
 - func[68] sig=0 <fflush>
 - func[69] sig=0 <__fflush_unlocked>
 - func[70] sig=0 <htonl>
 - func[71] sig=0 <__bswap_32>
 - func[72] sig=0 <htons>
 - func[73] sig=0 <__bswap_16>
 - func[74] sig=0 <ntohs>
 - func[75] sig=0 <__bswap_16.1>
 - func[76] sig=1 <__cxa_uncaught_exceptions>
 - func[77] sig=1 <std::uncaught_exception()>
 - func[78] sig=1 <std::uncaught_exceptions()>
 - func[79] sig=5 <setThrew>
 - func[80] sig=3 <__set_stack_limit>
 - func[81] sig=4 <dynCall_ii>
 - func[82] sig=7 <dynCall_iiii>
 - func[83] sig=19 <dynCall_jiji>
 - func[84] sig=17 <dynCall_iidiiii>
 - func[85] sig=10 <dynCall_vii>
 - func[86] sig=12 <legalstub$dynCall_jiji>
 - func[87] sig=0 <__growWasmMemory>
Global[3]:
 - global[0] i32 mutable=1 - init i32=5246896
 - global[1] i32 mutable=0 <__data_end> - init i32=3852
 - global[2] i32 mutable=1 - init i32=0
Export[31]:
 - func[6] <__wasm_call_ctors> -> "__wasm_call_ctors"
 - func[7] <main> -> "main"
 - func[13] <test_rust> -> "test_rust"
 - func[8] <test_c> -> "test_c"
 - func[9] <test_c_set_buffer> -> "test_c_set_buffer"
 - func[10] <test_c_get_buffer> -> "test_c_get_buffer"
 - func[11] <test_c_buffer_address> -> "test_c_buffer_address"
 - func[14] <test_rust2> -> "test_rust2"
 - func[15] <test_rust3> -> "test_rust3"
 - func[16] <test_rust_set_buffer> -> "test_rust_set_buffer"
 - func[17] <test_rust_get_buffer> -> "test_rust_get_buffer"
 - func[74] <ntohs> -> "ntohs"
 - func[72] <htons> -> "htons"
 - func[70] <htonl> -> "htonl"
 - func[18] <__errno_location> -> "__errno_location"
 - func[68] <fflush> -> "fflush"
 - func[79] <setThrew> -> "setThrew"
 - func[65] <stackSave> -> "stackSave"
 - func[66] <stackRestore> -> "stackRestore"
 - func[67] <stackAlloc> -> "stackAlloc"
 - func[77] <std::uncaught_exception()> -> "_ZSt18uncaught_exceptionv"
 - func[63] <dlmalloc> -> "malloc"
 - func[64] <dlfree> -> "free"
 - global[1] -> "__data_end"
 - func[80] <__set_stack_limit> -> "__set_stack_limit"
 - func[81] <dynCall_ii> -> "dynCall_ii"
 - func[82] <dynCall_iiii> -> "dynCall_iiii"
 - func[86] <legalstub$dynCall_jiji> -> "dynCall_jiji"
 - func[84] <dynCall_iidiiii> -> "dynCall_iidiiii"
 - func[85] <dynCall_vii> -> "dynCall_vii"
 - func[87] <__growWasmMemory> -> "__growWasmMemory"
Elem[1]:
 - segment[0] flags=0 table=0 count=5 - init i32=1
  - elem[1] = func[21] <__emscripten_stdout_close>
  - elem[2] = func[20] <__stdio_write>
  - elem[3] = func[22] <__emscripten_stdout_seek>
  - elem[4] = func[52] <fmt_fp>
  - elem[5] = func[53] <pop_arg_long_double>
Code[83]:
 - func[5] size=5 <emscripten_get_sbrk_ptr>
 - func[6] size=2 <__wasm_call_ctors>
 - func[7] size=230 <main>
 - func[8] size=24 <test_c>
 - func[9] size=95 <test_c_set_buffer>
 - func[10] size=37 <test_c_get_buffer>
 - func[11] size=49 <test_c_buffer_address>
 - func[12] size=40 <core::slice::_$LT$impl$u20$$u5b$T$u5d$$GT$::as_ptr::h12bdcb698fe43582>
 - func[13] size=46 <test_rust>
 - func[14] size=46 <test_rust2>
 - func[15] size=130 <test_rust3>
 - func[16] size=177 <test_rust_set_buffer>
 - func[17] size=71 <test_rust_get_buffer>
 - func[18] size=5 <__errno_location>
 - func[19] size=21 <__wasi_syscall_ret>
 - func[20] size=395 <__stdio_write>
 - func[21] size=4 <__emscripten_stdout_close>
 - func[22] size=4 <__emscripten_stdout_seek>
 - func[23] size=375 <memset>
 - func[24] size=10 <isdigit>
 - func[25] size=233 <memchr>
 - func[26] size=5 <pthread_self>
 - func[27] size=289 <wcrtomb>
 - func[28] size=4 <__pthread_self>
 - func[29] size=20 <wctomb>
 - func[30] size=142 <frexp>
 - func[31] size=87 <__ashlti3>
 - func[32] size=87 <__lshrti3>
 - func[33] size=526 <__trunctfdf2>
 - func[34] size=2 <__lock>
 - func[35] size=2 <__unlock>
 - func[36] size=10 <__ofl_lock>
 - func[37] size=7 <__ofl_unlock>
 - func[38] size=92 <__towrite>
 - func[39] size=534 <memcpy>
 - func[40] size=201 <__fwritex>
 - func[41] size=89 <fwrite>
 - func[42] size=430 <__vfprintf_internal>
 - func[43] size=2380 <printf_core>
 - func[44] size=24 <out>
 - func[45] size=77 <getint>
 - func[46] size=315 <pop_arg>
 - func[47] size=53 <fmt_x>
 - func[48] size=46 <fmt_o>
 - func[49] size=140 <fmt_u>
 - func[50] size=146 <pad>
 - func[51] size=14 <vfprintf>
 - func[52] size=3151 <fmt_fp>
 - func[53] size=42 <pop_arg_long_double>
 - func[54] size=5 <__DOUBLE_BITS>
 - func[55] size=77 <printf>
 - func[56] size=28 <fputs>
 - func[57] size=182 <__overflow>
 - func[58] size=134 <puts>
 - func[59] size=4 <__lockfile>
 - func[60] size=2 <__unlockfile>
 - func[61] size=160 <strlen>
 - func[62] size=89 <sbrk>
 - func[63] size=6198 <dlmalloc>
 - func[64] size=1784 <dlfree>
 - func[65] size=4 <stackSave>
 - func[66] size=20 <stackRestore>
 - func[67] size=37 <stackAlloc>
 - func[68] size=174 <fflush>
 - func[69] size=109 <__fflush_unlocked>
 - func[70] size=6 <htonl>
 - func[71] size=36 <__bswap_32>
 - func[72] size=6 <htons>
 - func[73] size=16 <__bswap_16>
 - func[74] size=6 <ntohs>
 - func[75] size=16 <__bswap_16.1>
 - func[76] size=4 <__cxa_uncaught_exceptions>
 - func[77] size=7 <std::uncaught_exception()>
 - func[78] size=4 <std::uncaught_exceptions()>
 - func[79] size=29 <setThrew>
 - func[80] size=6 <__set_stack_limit>
 - func[81] size=9 <dynCall_ii>
 - func[82] size=13 <dynCall_iiii>
 - func[83] size=13 <dynCall_jiji>
 - func[84] size=19 <dynCall_iidiiii>
 - func[85] size=11 <dynCall_vii>
 - func[86] size=35 <legalstub$dynCall_jiji>
 - func[87] size=6 <__growWasmMemory>
Data[3]:
 - segment[0] memory=0 size=773 - init i32=1024
  - 0000400: 496e 2043 3a20 6d61 696e 2829 0049 6e20  In C: main().In 
  - 0000410: 433a 2074 6573 745f 7275 7374 2829 2072  C: test_rust() r
  - 0000420: 6574 7572 6e65 6420 2564 0a00 496e 2043  eturned %d..In C
  - 0000430: 3a20 7465 7374 5f72 7573 745f 6275 6666  : test_rust_buff
  - 0000440: 6572 2069 7320 3078 2578 0a00 496e 2043  er is 0x%x..In C
  - 0000450: 3a20 7465 7374 5f63 2829 0049 6e20 5275  : test_c().In Ru
  - 0000460: 7374 3a20 7465 7374 5f72 7573 7428 2900  st: test_rust().
  - 0000470: 496e 2052 7573 743a 2074 6573 745f 7275  In Rust: test_ru
  - 0000480: 7374 3228 2900 496e 2052 7573 743a 2074  st2().In Rust: t
  - 0000490: 6573 745f 7275 7374 3328 2900 496e 2052  est_rust3().In R
  - 00004a0: 7573 743a 2074 6573 745f 7275 7374 5f73  ust: test_rust_s
  - 00004b0: 6574 5f62 7566 6665 7228 2900 496e 2052  et_buffer().In R
  - 00004c0: 7573 743a 2074 6573 745f 7275 7374 5f67  ust: test_rust_g
  - 00004d0: 6574 5f62 7566 6665 7228 2900 3007 0000  et_buffer().0...
  - 00004e0: 2d2b 2020 2030 5830 7800 286e 756c 6c29  -+   0X0x.(null)
  - 00004f0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000500: 1100 0a00 1111 1100 0000 0005 0000 0000  ................
  - 0000510: 0000 0900 0000 000b 0000 0000 0000 0000  ................
  - 0000520: 1100 0f0a 1111 1103 0a07 0001 0009 0b0b  ................
  - 0000530: 0000 0906 0b00 000b 0006 1100 0000 1111  ................
  - 0000540: 1100 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000550: 000b 0000 0000 0000 0000 1100 0a0a 1111  ................
  - 0000560: 1100 0a00 0002 0009 0b00 0000 0900 0b00  ................
  - 0000570: 000b 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000580: 0000 0000 0000 0000 0000 000c 0000 0000  ................
  - 0000590: 0000 0000 0000 000c 0000 0000 0c00 0000  ................
  - 00005a0: 0009 0c00 0000 0000 0c00 000c 0000 0000  ................
  - 00005b0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00005c0: 0000 0000 000e 0000 0000 0000 0000 0000  ................
  - 00005d0: 000d 0000 0004 0d00 0000 0009 0e00 0000  ................
  - 00005e0: 0000 0e00 000e 0000 0000 0000 0000 0000  ................
  - 00005f0: 0000 0000 0000 0000 0000 0000 0000 0010  ................
  - 0000600: 0000 0000 0000 0000 0000 000f 0000 0000  ................
  - 0000610: 0f00 0000 0009 1000 0000 0000 1000 0010  ................
  - 0000620: 0000 1200 0000 1212 1200 0000 0000 0000  ................
  - 0000630: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000640: 0000 1200 0000 1212 1200 0000 0000 0009  ................
  - 0000650: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000660: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000670: 0000 000b 0000 0000 0000 0000 0000 000a  ................
  - 0000680: 0000 0000 0a00 0000 0009 0b00 0000 0000  ................
  - 0000690: 0b00 000b 0000 0000 0000 0000 0000 0000  ................
  - 00006a0: 0000 0000 0000 0000 0000 0000 000c 0000  ................
  - 00006b0: 0000 0000 0000 0000 000c 0000 0000 0c00  ................
  - 00006c0: 0000 0009 0c00 0000 0000 0c00 000c 0000  ................
  - 00006d0: 3031 3233 3435 3637 3839 4142 4344 4546  0123456789ABCDEF
  - 00006e0: 2d30 582b 3058 2030 582d 3078 2b30 7820  -0X+0X 0X-0x+0x 
  - 00006f0: 3078 0069 6e66 0049 4e46 006e 616e 004e  0x.inf.INF.nan.N
  - 0000700: 414e 002e 00                             AN...
 - segment[1] memory=0 size=412 - init i32=1808
  - 0000710: 5465 7374 2052 7573 7420 4275 6666 6572  Test Rust Buffer
  - 0000720: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000730: 0500 0000 0000 0000 0000 0000 0100 0000  ................
  - 0000740: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000750: 0000 0000 0200 0000 0300 0000 c808 0000  ................
  - 0000760: 0004 0000 0000 0000 0000 0000 0100 0000  ................
  - 0000770: 0000 0000 0000 0000 0000 000a ffff ffff  ................
  - 0000780: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000790: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00007a0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00007b0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00007c0: 3007 0000 0000 0000 0000 0000 0000 0000  0...............
  - 00007d0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00007e0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00007f0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000800: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000810: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000820: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000830: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000840: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000850: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000860: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000870: 0000 0000 f00c 0000 0000 0000 0000 0000  ................
  - 0000880: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000890: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00008a0: 0000 0000 0000 0000 0000 0000            ............
 - segment[2] memory=0 size=1628 - init i32=2224
  - 00008b0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00008c0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00008d0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00008e0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00008f0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000900: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000910: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000920: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000930: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000940: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000950: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000960: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000970: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000980: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000990: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00009a0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00009b0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00009c0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00009d0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00009e0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00009f0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000a00: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000a10: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000a20: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000a30: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000a40: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000a50: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000a60: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000a70: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000a80: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000a90: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000aa0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000ab0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000ac0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000ad0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000ae0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000af0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000b00: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000b10: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000b20: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000b30: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000b40: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000b50: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000b60: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000b70: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000b80: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000b90: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000ba0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000bb0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000bc0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000bd0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000be0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000bf0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000c00: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000c10: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000c20: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000c30: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000c40: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000c50: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000c60: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000c70: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000c80: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000c90: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000ca0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000cb0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000cc0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000cd0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000ce0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000cf0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000d00: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000d10: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000d20: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000d30: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000d40: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000d50: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000d60: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000d70: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000d80: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000d90: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000da0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000db0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000dc0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000dd0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000de0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000df0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000e00: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000e10: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000e20: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000e30: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000e40: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000e50: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000e60: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000e70: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000e80: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000e90: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000ea0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000eb0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000ec0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000ed0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000ee0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000ef0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0000f00: 0000 0000 0000 0000 0000 0000            ............
Custom:
 - name: "name"
 - func[0] <__wasi_fd_write>
 - func[1] <emscripten_memcpy_big>
 - func[2] <emscripten_resize_heap>
 - func[3] <__handle_stack_overflow>
 - func[4] <setTempRet0>
 - func[5] <emscripten_get_sbrk_ptr>
 - func[6] <__wasm_call_ctors>
 - func[7] <main>
 - func[8] <test_c>
 - func[9] <test_c_set_buffer>
 - func[10] <test_c_get_buffer>
 - func[11] <test_c_buffer_address>
 - func[12] <core::slice::_$LT$impl$u20$$u5b$T$u5d$$GT$::as_ptr::h12bdcb698fe43582>
 - func[13] <test_rust>
 - func[14] <test_rust2>
 - func[15] <test_rust3>
 - func[16] <test_rust_set_buffer>
 - func[17] <test_rust_get_buffer>
 - func[18] <__errno_location>
 - func[19] <__wasi_syscall_ret>
 - func[20] <__stdio_write>
 - func[21] <__emscripten_stdout_close>
 - func[22] <__emscripten_stdout_seek>
 - func[23] <memset>
 - func[24] <isdigit>
 - func[25] <memchr>
 - func[26] <pthread_self>
 - func[27] <wcrtomb>
 - func[28] <__pthread_self>
 - func[29] <wctomb>
 - func[30] <frexp>
 - func[31] <__ashlti3>
 - func[32] <__lshrti3>
 - func[33] <__trunctfdf2>
 - func[34] <__lock>
 - func[35] <__unlock>
 - func[36] <__ofl_lock>
 - func[37] <__ofl_unlock>
 - func[38] <__towrite>
 - func[39] <memcpy>
 - func[40] <__fwritex>
 - func[41] <fwrite>
 - func[42] <__vfprintf_internal>
 - func[43] <printf_core>
 - func[44] <out>
 - func[45] <getint>
 - func[46] <pop_arg>
 - func[47] <fmt_x>
 - func[48] <fmt_o>
 - func[49] <fmt_u>
 - func[50] <pad>
 - func[51] <vfprintf>
 - func[52] <fmt_fp>
 - func[53] <pop_arg_long_double>
 - func[54] <__DOUBLE_BITS>
 - func[55] <printf>
 - func[56] <fputs>
 - func[57] <__overflow>
 - func[58] <puts>
 - func[59] <__lockfile>
 - func[60] <__unlockfile>
 - func[61] <strlen>
 - func[62] <sbrk>
 - func[63] <dlmalloc>
 - func[64] <dlfree>
 - func[65] <stackSave>
 - func[66] <stackRestore>
 - func[67] <stackAlloc>
 - func[68] <fflush>
 - func[69] <__fflush_unlocked>
 - func[70] <htonl>
 - func[71] <__bswap_32>
 - func[72] <htons>
 - func[73] <__bswap_16>
 - func[74] <ntohs>
 - func[75] <__bswap_16.1>
 - func[76] <__cxa_uncaught_exceptions>
 - func[77] <std::uncaught_exception()>
 - func[78] <std::uncaught_exceptions()>
 - func[79] <setThrew>
 - func[80] <__set_stack_limit>
 - func[81] <dynCall_ii>
 - func[82] <dynCall_iiii>
 - func[83] <dynCall_jiji>
 - func[84] <dynCall_iidiiii>
 - func[85] <dynCall_vii>
 - func[86] <legalstub$dynCall_jiji>
 - func[87] <__growWasmMemory>
Custom:
 - name: ".debug_info"
Custom:
 - name: ".debug_pubtypes"
Custom:
 - name: ".debug_ranges"
Custom:
 - name: ".debug_aranges"
Custom:
 - name: ".debug_abbrev"
Custom:
 - name: ".debug_line"
Custom:
 - name: ".debug_str"
Custom:
 - name: ".debug_pubnames"
